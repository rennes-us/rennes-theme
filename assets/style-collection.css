/*
 *
 * Collections
 *
 * */

/* Align the set of products in the center of this container, with
 * evenly-distributed padding and however many products can fit per row. */
article.products, section.products {
  display: flex;
  /* In general do two across */
  flex-basis: 50%;
  flex-flow: wrap;
  justify-content: space-around;
}

/* An individual product. */
/* Having a flexible width will let the contained product image scale, but
 * only to a reasonable min/max.  Combined with display: flex on the
 * container the layout will handle a wide range of screen sizes. */
article.products [typeof="Product"], section.products [typeof="Product"] {
  /* Margin relative to viewport width.  Effectively sets the minimum spacing
   * between our flexible elements. */
  margin: 2vw 1vw;
  /* Need to account for side-to-side margins */
  width: calc(50% - 2vw);
  display: flex;
  /* The column/flex-end combo will have items "bottom justified" which helps
   * with varying product title length and wrapping */
  flex-direction: column-reverse;
  justify-content: flex-end;
}

/* ****************
 * On larger screens do more products across
 * ***************/
@media only screen and (min-width: 740px) {
  article.products, section.products { flex-basis: 33.3%; }
  article.products [typeof="Product"], section.products [typeof="Product"] {
    width: calc(33.3% - 2vw);
  }
}
@media only screen and (min-width: 1200px) {
  article.products, section.products { flex-basis: 25%; }
  article.products [typeof="Product"], section.products [typeof="Product"] {
    width: calc(25% - 2vw);
  }
}
/* ************* */

article.products [typeof="Product"] div[property="name"],
section.products [typeof="Product"] div[property="name"] {
  font-weight: bold;
  margin: 5px;
  text-align: center;
}

/* The product link, wrapping the image. */
article.products [typeof="Product"] a, section.products [typeof="Product"] a {
  background: white;
  display: block;
}

article.products [typeof="Product"] p[typeof="OfferForPurchase"],
section.products [typeof="Product"] p[typeof="OfferForPurchase"] {
  margin: 0.3em 0;
  text-align: center;
}

/* The product image. */
article.products [typeof="Product"] img,
section.products [typeof="Product"] img {
  display: block;
  width: 100%;
}

/* The pagination, centered at the bottom of the list. */
nav.pagination {
  text-align: center;
  width: 100%;
}

/* Fancy product-details-on-hover styling */

/* Ideally I could detect with a media query if the user CAN hover, but that's
 * waiting on Media Queries Level 4.  Instead I'll just assume that larger
 * screens come with a real mouse too. */
@media only screen and (min-width: 1200px) {
  /* Remove the heading's margin for the hovering case */
  article.products [typeof="Product"] span[property="name"],
  section.products [typeof="Product"] span[property="name"]  {
    margin-top: 0;
    padding: 8px;
  }
  article.products [typeof="Product"] header p,
  section.products [typeof="Product"] header p {
    padding: 8px;
  }
}


/* Designers list */

ul.designers
{
  text-align: center;
}

ul.designers ul {
  padding: 0;
  padding-top: 0.5em;
}

ul.designers > li {
  padding-bottom: 3em;
}

ul.designers li {
  list-style-type: none;
}

ul.designers a:hover {
  font-weight: bold;
  text-decoration: none;
}

/* Pagination */

.pagination .current {
  font-weight: bold;
}
